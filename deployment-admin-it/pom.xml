<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>de.akquinet.gomobile</groupId>
    <artifactId>deployment-admin-reactor</artifactId>
    <version>0.9.0-SNAPSHOT</version>
  </parent>

  <groupId>de.akquinet.gomobile</groupId>
  <artifactId>deployment-admin-it</artifactId>
  <name>deployment-admin-it</name>
  <version>0.9.0-SNAPSHOT</version>

  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <configuration>
          <source>1.5</source>
          <target>1.5</target>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.servicemix.tooling</groupId>
        <artifactId>depends-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>generate-depends-file</id>
            <goals>
              <goal>generate-depends-file</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <dependencies>
    <dependency>
      <groupId>org.osgi</groupId>
      <artifactId>org.osgi.compendium</artifactId>
    </dependency>

    <dependency>
        <groupId>org.apache.felix</groupId>
        <artifactId>org.apache.felix.eventadmin</artifactId>
        <version>1.0.0</version>
    </dependency>

    <!-- Pax Exam API: -->
    <dependency>
      <groupId>org.ops4j.pax.exam</groupId>
      <artifactId>pax-exam</artifactId>
      <version>1.2.0</version>
    </dependency>
    <!-- During runtime Pax Exam will discover the OSGi container to use by
      searching metadata available into classpath. Pax Exam comes with a default
      container that uses [Pax Runner] for implementing the container requirements: -->
    <dependency>
      <groupId>org.ops4j.pax.exam</groupId>
      <artifactId>pax-exam-container-default
    </artifactId>
      <version>1.2.0</version>
    </dependency>
    <!-- If your test code is based on JUnit you will have to have the Junit
      support artifact: -->
    <dependency>
      <groupId>org.ops4j.pax.exam</groupId>
      <artifactId>pax-exam-junit</artifactId>
      <version>1.2.0</version>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
    </dependency>

    <!-- TinyBundle -->
    <dependency>
      <groupId>org.ops4j.pax.swissbox</groupId>
      <artifactId>pax-swissbox-tinybundles</artifactId>
      <version>1.4.0</version>
    </dependency>
    <dependency>
      <groupId>de.akquinet.gomobile</groupId>
      <artifactId>deployment-package-api</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>org.ops4j.pax.swissbox</groupId>
      <artifactId>pax-swissbox-tinybundles</artifactId>
      <version>1.0.0</version>
      <scope>compile</scope>
    </dependency>

    <dependency>
      <groupId>org.apache.felix</groupId>
      <artifactId>org.apache.felix.ipojo</artifactId>
      <version>1.6.8</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.felix</groupId>
      <artifactId>org.apache.felix.configadmin</artifactId>
      <version>1.2.8</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>de.akquinet.gomobile</groupId>
      <artifactId>deployment-admin-impl</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>de.akquinet.gomobile</groupId>
      <artifactId>deployment-package-api</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>de.akquinet.gomobile</groupId>
      <artifactId>autoconf-resource-processor</artifactId>
      <version>${project.version}</version>
    </dependency>
  </dependencies>

</project>
